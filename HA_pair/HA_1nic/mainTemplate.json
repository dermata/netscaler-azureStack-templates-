{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "13.0.0.0",
	"parameters": {
		"adminUsername": {
			"defaultValue": "nsroot",
			"type": "String",
			"metadata": {
				"description": "Username for the Virtual Machines."
			}
		},
		"adminPassword": {
			"type": "SecureString",
			"metadata": {
				"description": "Password for the Virtual Machines."
			}
		},
		"azureStackDomain": {
	      "type": "string",
	      "metadata": {
	        "description": "Please provide the Azure Stack Domain."
	      }
		},
		"azureStackTenant": {
	      "type": "string",
	      "metadata": {
	        "description": "Please provide the Azure Stack Tenant."
	      }
		},
		"azureClient": {
	      "type": "string",
	      "metadata": {
	        "description": "Please provide the Azure Client Id."
	      }
		},
		"azureClientSecret": {
	      "type": "SecureString",
	      "metadata": {
	        "description": "Please provide the Azure Client Secret."
	      }
	    },
		"vmSize": {
			"defaultValue": "Standard_DS3_v2",
			"type": "String",
			"allowedValues": [
				"Standard_DS3_v2",
				"Standard_DS4_v2"
			],
			"metadata": {
				"description": "Size of Azure Virtual Machine."
			}
		},
		"vmSku": {
			"defaultValue": "netscalerbyol",
			"type": "String",
			"allowedValues": ["netscalerbyol"],

			"metadata": {
				"description": "SKU of NetScaler Image."
			}
		},
		"vnetName": {
			"defaultValue": "vnet01",
			"type": "String",
			"metadata": {
				"description": "Name of Virtual Network"
			}
		},
		"vnetResourceGroup": {
			"defaultValue": "",
			"type": "String",
			"metadata": {
				"description": "Resource Group name of existing Virtual Network. Leave empty if Resource Group is same as current deployment."
			}
		},
		"vnetNewOrExisting": {
			"defaultValue": "new",
			"allowedValues": [
				"new",
				"existing"
			],
			"type": "String"
		},
		"snetName": {
			"defaultValue": "subnet",
			"type": "String",
			"metadata": {
				"description": "Name of Subnet. Enter existing subnet name if opting for existing Virtual Network"
			}
		},
		"snetAddressPrefix": {
			"defaultValue": "10.11.0.0/24",
			"type": "String",
			"metadata": {
				"description": "Value of subnet in CIDR form. Ignore this field if opting for existing Virtual Network, Address prefix will be picked from existing Subnet."
			}
		},
		"baseUrl": {
			"defaultValue": "https://github.com/citrix/netscaler-azure-templates",
			"type": "String",
			"metadata": {
				"artifactsBaseUrl": "",
				"description": "The base URL for dependent assets"
			}
		}
	},
	"variables": {
		"vmN": "ns-vpx",
		"nicN": "ns-vpx-nic",
		"nsgN": "ns-vpx-nic-nsg",
		"lbN": "alb",
		"bePoolN": "bepool-11",
		"probeN": "probe-11",
		"ipConfN": "ipconf-11",
		"avsN": "avl-set",
		"alb-pipN": "alb-publicip",
		"mgmt-pipN-suffix": "-mgmt-publicip",
		"saN": "[concat('vpxha', uniqueString(resourceGroup().id))]",
		"vnetRg": "[if(equals(parameters('vnetResourceGroup'), ''), resourceGroup().name,parameters('vnetResourceGroup'))]",
		"vnetId": "[resourceId(variables('vnetRg'), 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
		"snetRef": "[concat(variables('vnetId'), '/subnets/', parameters('snetName'))]",
		"lbId": "[resourceId( 'Microsoft.Network/loadBalancers', variables('lbN'))]",
		"bePoolId": "[concat(variables('lbId'),'/backendAddressPools/', variables('bePoolN'))]",
		"probeId": "[concat(variables('lbId'),'/probes/', variables('probeN'))]",
		"ipConfId": "[concat(variables('lbId'),'/frontendIpConfigurations/', variables('ipConfN'))]"
	},
	"resources": [{
			"type": "Microsoft.Network/loadBalancers",
			"name": "[variables('lbN')]",
			"apiVersion": "2017-10-01",
			"location": "[resourceGroup().location]",
			"properties": {
				"frontendIPConfigurations": [{
						"name": "[variables('ipConfN')]",
						"properties": {
							"publicIPAddress": {
								"id": "[resourceId( 'Microsoft.Network/publicIpAddresses', variables('alb-pipN'))]"
							}
						}
					}
				],
				"backendAddressPools": [{
						"name": "[variables('bePoolN')]"
					}
				],
				"probes": [{
						"name": "[variables('probeN')]",
						"properties": {
							"protocol": "tcp",
							"port": 9000,
							"intervalInSeconds": 5,
							"numberOfProbes": 2
						}
					}
				],
				"loadBalancingRules": [{
						"name": "lbRule1",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[variables('ipConfId')]"
							},
							"frontendPort": 80,
							"backendPort": 80,
							"enableFloatingIP": true,
							"idleTimeoutInMinutes": 4,
							"protocol": "Tcp",
							"loadDistribution": "Default",
							"backendAddressPool": {
								"id": "[variables('bePoolId')]"
							},
							"probe": {
								"id": "[variables('probeId')]"
							}
						}
					}
				]
			},
			"dependsOn": [
				"[concat('Microsoft.Network/publicIpAddresses/', variables('alb-pipN'))]"
			]
		}, {
			"type": "Microsoft.Compute/availabilitySets",
			"name": "[variables('avsN')]",
			"apiVersion": "2017-12-01",
			"location": "[resourceGroup().location]",
			"properties": {
				"platformFaultDomainCount": "3",
				"platformUpdateDomainCount": "20"
			}
		}, {
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(variables('vmN'), copyIndex())]",
			"apiVersion": "2017-12-01",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "vmcopy",
				"count": 2
			},
			"plan": {
				"name": "[parameters('vmSku')]",
				"publisher": "citrix",
				"product": "netscalervpx-130"
			},
			"properties": {
				"osProfile": {
					"computerName": "[concat(variables('vmN'), copyIndex())]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]",
					"customData": "[base64(concat('{\"username\":\"', parameters('adminUsername'), '\",\"ha_config\":{\"peer_node\":\"', reference(concat(variables('nicN'), sub(1, copyIndex()))).ipConfigurations[0].properties.privateIPAddress ,'\"},\"vpx_config\":{\"snip_11\":\"', reference(concat(variables('nicN'), copyIndex())).ipConfigurations[1].properties.privateIPAddress ,'\",\"pvt_ip_12\":\"', reference(concat(variables('nicN'), copyIndex())).ipConfigurations[2].properties.privateIPAddress ,'\",\"subnet_11\":\"', reference(variables('snetRef'), '2017-10-01', 'Full').properties.addressPrefix ,'\",\"subnet_12\":\"', reference(variables('snetRef'), '2017-10-01', 'Full').properties.addressPrefix ,'\",\"location\":\"', resourceGroup().location, '\",\"resourceGroupName\": \"', resourceGroup().name, '\",\"subscriptionId\": \"', subscription().subscriptionId, '\",\"azureStackDomain\":\"', parameters('azureStackDomain'), '\",\"azureStackTenant\":\"', parameters('azureStackTenant'), '\",\"azureClient\":\"', parameters('azureClient'), '\",\"azureClientSecret\":\"', parameters('azureClientSecret'), '\"}}'))]"
				},
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "citrix",
						"offer": "netscalervpx-130-byol",
						"sku": "netscalerbyol",
						"version": "latest"
					},
					"osDisk": {
						"createOption": "fromImage",
						"vhd": {
							"uri": "[concat(reference(variables('saN'), '2017-10-01').primaryEndpoints.blob, 'vhds/osdisk', copyIndex(), '.vhd')]"
						},
						"name": "[concat(variables('vmN'), copyIndex())]"
					},
					"dataDisks": []
				},
				"networkProfile": {
					"networkInterfaces": [{
							"id": "[resourceId( 'Microsoft.Network/networkInterfaces', concat(variables('nicN'), copyIndex()))]",
							"properties": {
								"primary": true
							}
						}
					]
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('avsN'))]"
				},
				"diagnosticsProfile": {
					"bootDiagnostics": {
						"enabled": true,
						"storageUri": "[reference(resourceId( 'Microsoft.Storage/storageAccounts', variables('saN')), '2017-10-01').primaryEndpoints['blob']]"
					}
				}
			},
			"dependsOn": [
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), copyIndex())]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicN'), sub(1,copyIndex()))]",
				"[concat('Microsoft.Compute/availabilitySets/', variables('avsN'))]",
				"[concat('Microsoft.Storage/storageAccounts/', variables('saN'))]"
			]
		}, {
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[variables('saN')]",
			"apiVersion": "2017-10-01",
			"kind": "Storage",
			"location": "[resourceGroup().location]",
			"sku": {
				"name": "Standard_LRS"
			},
			"properties": {}
		}, {
			"type": "Microsoft.Network/virtualNetworks",
			"name": "[parameters('vnetName')]",
			"apiVersion": "2017-10-01",
			"location": "[resourceGroup().location]",
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[parameters('snetAddressPrefix')]"
					]
				},
				"subnets": [{
						"name": "[parameters('snetName')]",
						"properties": {
							"addressPrefix": "[parameters('snetAddressPrefix')]"
						}
					}
				]
			},
			"condition": "[equals(parameters('vnetNewOrExisting'),'new')]"
		}, {
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('nicN'), copyIndex())]",
			"apiVersion": "2017-10-01",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "niccopy",
				"count": 2
			},
			"properties": {
				"ipConfigurations": [{
						"name": "nsip",
						"properties": {
							"primary": true,
							"subnet": {
								"id": "[variables('snetRef')]"
							},
							"privateIPAllocationMethod": "Dynamic",
							"publicIpAddress": {
								"id": "[resourceId('Microsoft.Network/publicIpAddresses', concat(variables('vmN'), copyIndex(), variables('mgmt-pipN-suffix')))]"
							}
						}
					}, {
						"name": "vip",
						"properties": {
							"subnet": {
								"id": "[variables('snetRef')]"
							},
							"privateIPAllocationMethod": "Dynamic",
							"loadBalancerBackendAddressPools": [{
									"id": "[variables('bePoolId')]"
								}
							]
						}
					}, {
						"name": "snip",
						"properties": {
							"subnet": {
								"id": "[variables('snetRef')]"
							},
							"privateIPAllocationMethod": "Dynamic"
						}
					}
				],
				"networkSecurityGroup": {
					"id": "[resourceId( 'Microsoft.Network/networkSecurityGroups', concat(variables('nsgN'), copyIndex()))]"
				}
			},
			"dependsOn": [
				"[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
				"[concat('Microsoft.Network/publicIpAddresses/', variables('vmN'), copyIndex(), variables('mgmt-pipN-suffix'))]",
				"[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgN'), copyIndex())]",
				"[concat('Microsoft.Network/loadBalancers/', variables('lbN'))]"
			]
		}, {
			"type": "Microsoft.Network/publicIpAddresses",
			"name": "[variables('alb-pipN')]",
			"apiVersion": "2017-10-01",
			"location": "[resourceGroup().location]",
			"properties": {
				"publicIpAllocationMethod": "Dynamic"
			}
		}, {
			"type": "Microsoft.Network/publicIpAddresses",
			"name": "[concat(variables('vmN'), copyIndex(), variables('mgmt-pipN-suffix'))]",
			"apiVersion": "2017-10-01",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "ipcopy",
				"count": 2
			},
			"properties": {
				"publicIpAllocationMethod": "Dynamic"
			}
		}, {
			"type": "Microsoft.Network/networkSecurityGroups",
			"name": "[concat(variables('nsgN'), copyIndex())]",
			"apiVersion": "2017-10-01",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "nsgcopy",
				"count": 2
			},
			"properties": {
				"securityRules": [{
						"name": "default-allow-ssh",
						"properties": {
							"priority": 1000,
							"sourceAddressPrefix": "*",
							"protocol": "TCP",
							"destinationPortRange": "22",
							"access": "Allow",
							"direction": "Inbound",
							"sourcePortRange": "*",
							"destinationAddressPrefix": "*"
						}
					}, {
						"name": "autoscale-daemon",
						"properties": {
							"priority": 1001,
							"sourceAddressPrefix": "*",
							"protocol": "TCP",
							"destinationPortRange": "9001",
							"access": "Allow",
							"direction": "Inbound",
							"sourcePortRange": "*",
							"destinationAddressPrefix": "*"
						}
					}
				]
			}
		}
	]
}
